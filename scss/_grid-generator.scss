@use "sass:math";
@import './flex-mixin';
// @import "sass-flex-mixin/_flex";

@function pow ($value, $pow: 1) {
  @return if($pow == 0, 1, $value * pow($value, $pow - 1));
}

@function rounded ($value, $precision: 5) {
  $pow10: pow(10, $precision);
  $rounded: round($value * $pow10);
  @return math.div($rounded, $pow10);
}


// Set the number of columns you want to use on your layout.
// https://github.com/hugeinc/flexboxgrid-sass/blob/master/flexboxgrid.scss
$grid-columns: 12 !default;
// Set the gutter between columns.
$gutter-width: 30px !default;
// Set a margin for the container sides.
$outer-margin: 0 !default;
// $flexboxgrid-outer-margin: 2rem !default;
// Create or remove breakpoints for your project
// Syntax:
// name SIZErem,
$breakpoints:
  xxs 0 100%,
  xs 480px 100%,
  sm 768px 750px,
  md 992px 970px,
  lg 1200px 1170px !default;
$flexboxgrid-max-width: 1170px !default;

//
// -- Stop editing -- //
//

$gutter-compensation: $gutter-width * .5 * -1;
$half-gutter-width: $gutter-width * .5;

.container {
  box-sizing: border-box;
  max-width: $flexboxgrid-max-width;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;

  @media only screen and (min-width: 1200px) {
    padding-left: 0;
    padding-right: 0;
  }
}

.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-right: $outer-margin;
  padding-left: $outer-margin;
}

.row {
  box-sizing: border-box;
  @include flexbox();
  @include flex(0, 1, auto);
  @include flex-direction(row);
  @include flex-wrap(wrap);
  margin-right: $gutter-compensation;
  margin-left: $gutter-compensation;
}

.row.reverse {
  @include flex-direction(row-reverse);
}

.col.reverse {
  @include flex-direction(column-reverse);
}

@mixin flexboxgrid-sass-col-common {
  box-sizing: border-box;

  // split @include flex(0, 0, auto) into individual props
  @include flex-grow(0);
  @include flex-shrink(0);

  // we leave @include flex-basis(auto) out of common because  
  // in some spots we need it and some we dont
  // more why here: https://github.com/kristoferjoseph/flexboxgrid/issues/126

  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
}

.simple-flex {
  display: flex;
}

$name: xs;
.col-#{$name} {
  @include flexboxgrid-sass-col-common;
  @include flex-basis(auto);
}
@for $i from 1 through $grid-columns {
  .col-#{$name}-#{$i} {
    @include flexboxgrid-sass-col-common;
    @include flex-basis(rounded(math.div(100%, $grid-columns)) * $i);
    max-width: rounded(math.div(100%, $grid-columns)) * $i;
  }
}
@for $i from 1 through $grid-columns {
  .col-#{$name}-offset-#{$i} {
    @include flexboxgrid-sass-col-common;
    margin-left: rounded(math.div(100%, $grid-columns)) * $i;
  }
}
.col-#{$name} {
  @include flex-grow(1);
  @include flex-basis(0);
  max-width: 100%;
}
.start-#{$name} {
  @include justify-content(flex-start);
  text-align: start;
}

.center-#{$name} {
  @include justify-content(center);
  text-align: center;
}

.end-#{$name} {
  @include justify-content(flex-end);
  text-align: end;
}

.top-#{$name} {
  @include align-items(flex-start);
}

.middle-#{$name} {
  display: flex;
  @include align-items(center);
}

.right-#{$name} {
  justify-content: flex-end
}

.bottom-#{$name} {
  @include align-items(flex-end);
}

.around-#{$name} {
  @include justify-content(space-around);
}

.between-#{$name} {
  @include justify-content(space-between);
}

.first-#{$name} {
  order: -1;
}

.last-#{$name} {
  order: 1;
}


@each $breakpoint in $breakpoints {
  $name: nth($breakpoint, 1);
  $size: nth($breakpoint, 2);
  $container: nth($breakpoint, 3);
  @media only screen and (min-width: $size) {
    .container {
      width: $container;
    }

    .col-#{$name} {
      @include flexboxgrid-sass-col-common;
      @include flex-basis(auto);
    }
    @for $i from 1 through $grid-columns {
      .col-#{$name}-#{$i} {
        @include flexboxgrid-sass-col-common;
        @include flex-basis(rounded(math.div(100%, $grid-columns)) * $i);
        max-width: rounded(math.div(100%, $grid-columns)) * $i;
      }
    }
    @for $i from 1 through $grid-columns {
      .col-#{$name}-offset-#{$i} {
        @include flexboxgrid-sass-col-common;
        margin-left: rounded(math.div(100%, $grid-columns)) * $i
      }
    }
    .col-#{$name} {
      @include flex-grow(1);
      @include flex-basis(0);
      max-width: 100%;
    }
    .start-#{$name} {
      @include justify-content(flex-start);
      text-align: start;
    }

    .center-#{$name} {
      @include justify-content(center);
      text-align: center;
    }

    .end-#{$name} {
      @include justify-content(flex-end);
      text-align: end;
    }

    .top-#{$name} {
      @include align-items(flex-start);
    }

    .middle-#{$name} {
      @include align-items(center);
    }

    .bottom-#{$name} {
      @include align-items(flex-end);
    }

    .around-#{$name} {
      @include justify-content(space-around);
    }

    .between-#{$name} {
      @include justify-content(space-between);
    }

    .first-#{$name} {
      order: -1;
    }

    .last-#{$name} {
      order: 1;
    }
  }
}